{
  "hash": "7cd588b4d8b0a64cdfdfa50a020e3fb6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Version control and track changes\njupyter: python3\nformat: html\nauthor:\n    - name: L. Darmet\n    - name: JJ. Torre\n\n---\n\n\n\n\n## Git, GitHub, Gitlab  {.scrollable}\n\nAn introduction to version control, easy to share/reproduce code, and more!\n\nYou can find it as a scrollable RevealJS presentation [here](www/git_presentation.html).\n\nBy: L. Darmet and JJ. Torre\n\n<img src=\"www/img/banner.png\" alt=\"drawing\" width=\"500\">\n\n\n<center>Are you in this picture?</center>\n<center>\n<img src=\"www/img/final.png\" alt=\"drawing\" style=\"margin:auto\" width='500' height='500'>\n</center>\n\n<center>Or in this one ?</center>\n<center>\n<img src=\"www/img/ctrlz.png\" alt=\"drawing\" style=\"margin:auto\" width='500' height='500'>\n</center>\n\n<center>\n    <h1> Version control can be a solution ! </h1>\n<img src=\"www/img/git_flow.png\" alt=\"drawing\" style=\"margin:auto\" width='300' height='300'>\n\n</center>\n\n## Use cases {.scrollable}\n* **Keep track of file changes** (also with Matlab..!) üñ•Ô∏è\n* **Synchronize** changes among team members ü§ù\n* **Share** the code along your publication: open science and open data üì°\n    - Yes you are ashamed to share your code but it would put a strain on you for better code (cleaner, clearer, etc) ü•≤\n    - Sharing only data is sometimes harsh if you don't provide an example on how to use them üôè\n\n* Maintain a **code library** üìö to share existing code with new interns, PhD, collaborators,...\n    - Avoid developing again and again the same tools for experimental protocol, pre-processing, data visualization...\n    - Standard pipelines\n    - We have created a **[COPHY](https://github.com/cophyteam/) organization** on GitHub to centralize code\n<center>\n<img src=\"www/img/expprotocol.jpg\" alt=\"drawing\" style=left width='300' height='300'>\n</center>\n\n* Manage and maintain the $\\LaTeX$ code of your thesis ü§ì\n* Overleaf supports direct sync with GitHub to import existing repos or create one based on current project.\n> This direct sync also allows to backup your Overleaf projects\n\n# Git + GitHub is the most common version control system  {.scrollable}\n\n## What are the differences between the two ?  {.scrollable}\n<center>\n<img src=\"www/img/git_github.jpg\" alt=\"drawing\" margin='left' width='350' height='350'>\n</center>\n\n<img src=\"www/img/git_logo.png\" alt=\"drawing\" margin='left' width='100' height='100'>\n\n- Git is an **open-source distributed version control tool**\n- It follows the evolution of a set of files in your computer, called a **repository** or **repo**\n- Created by Linus Torvalds (creator of Linux and Android) in 2005 and maintaned by the Linux Foundation\n\n<img src=\"www/img/github_logo.png\" alt=\"drawing\" style=left width='75' height='75'>\n\n* Github is an **online hosting service for git repos**\n* Startup created in 2008, acquired by **Microsoft** in 2018\n* The repos can be either **private** or **public**\n* Additionnal features:\n    - **Features requests, issues and pull request**: ask for new functionnality and merge new functionnality to the exisiting code after review by the owner\n    - A **wiki** for each project\n    - **Continuous integration tools** (run automatic tests to check if additions in the code don't alter the expected outputs)\n    - Host your **personnal website**\n* Cute cat/octopus mascot\n* **Follow** people and explore their code database\n\n## Personnal static website  {.scrollable}\n<img src=\"www/img/website.png\" alt=\"drawing\" style=left width='950' height='950'>\n\n- There exists other online hosting services such as **Bitbucket** (also private company) or **Gitlab** (open-source).\n- We have a **self-hosted Gitlab in CRNL**..! üí´\n<br />\n<center>\n<div class=\"row\">\n  <div class=\"row\">\n    <img src=\"www/img/bitbucket-logo.png\" alt=\"drawing\" style=left width='150' height='150'>\n  </div>\n  <div class=\"column\">\n    <img src=\"www/img/gitlab.png\" alt=\"drawing\" style=left width='250' height='250'>\n  </div>\n</div>   \n</center>\n\n# Get GitHub for free  {.scrollable}\n **GitHub is free** but you may encounter limitations if you do not suscribe to **GitHub Pro** (4\\$ per month üí∏)\n\nBecause of your academic or student status you can get **Github Pro for free**.\n\nApply here:\nhttps://education.github.com/benefits\n\n<center>\n<img src=\"www/img/githubstudent.jpg\" alt=\"drawing\" style=left width='350' height='350'>\n</center>\n\n# Or use the Gitlab of CRNL ü§Ø  {.scrollable}\n\n1. Open **a ticket** to ask access to the GitLab\n2. Sign in and connect in: [http://10.69.168.17/users/sign_in](http://10.69.168.17/users/sign_in)\n\n<center>\n<img src=\"www/img/gitlabisae.jpg\" alt=\"drawing\" style=left width='450' height='450'>\n</center>\n\n# Terminology  {.scrollable}\n- Create a **repository** or **repo** and **clone** it\n- **Commit** your changes (locally) and then **push** (remote) $\\rightarrow$ keep track of changes/addition\n- **Pull** to get latest changes from other people\n- Going back to a previous **commit**\n- Solve **merge conflicts**\n- Use **branch** to develop features in parallel\n\n <center>\n <img src=\"www/img/commits.png\" alt=\"drawing\" style=left width='900' height='900'>\n </center>\n\n# Code example to start using Gitub üë©‚Äçüíª  {.scrollable}\n\n## Install Git on your machine  {.scrollable}\n* On Linux from a terminal:\n```bash\nsudo apt update\nsudo apt install git-all\n```\n* On Windows:  \n    - Download it from <https://git-scm.com/download/win>\n    - Run the installer\n\n## Create a local repo from scratch  {.scrollable}\n> Enter commands in GitBash for Windows and on terminal for Linux\n\n\n```bash\nmkdir mynewrepo && cd mynewrepo\ngit init \nECHO >> README.md\ngit add README.md\ngit commit -m \"Add README\"\n```\n\n## Connect your machine with GitHub  {.scrollable}\n> First you need to create an account on <https://github.com>  \n> Then we will need **SSH key** to have a secure and authentified connection\n\n1. In terminal or GitBash, generate SSH keys:  \n```bash\nssh-keygen -t rsa -C \"your_email@example.com\"\n```\nUse same email as registred on GitHub. Then press `Enter` two times (no need to set a password).\n\n\n\n2. Then open the generated (public) key to share it with GitHub:\n```bash\nnotepad ~/.ssh/id_rsa.pub\n```\n3. On GitHub website go to: **Settings** > **SSH and GPG Keys**. Click on **New SSH key** and enter a title.  \n  \n4. In the field **Key** paste all the contents of the file `id_rsa.pub` that you have just opened, beginning at `ssh-ras ...` up to your email (including it). You can copy with a terminal utility (such as `xclip`) if copying by hand does not work\n5. Click **Add SSH key**\n\n## Connect your local repo to GitHub  {.scrollable}\n> As you have setup a secured SSH key, no need for password\n\nGo back to you terminal where you have initialized your local repo:\n```bash\ngit remote add origin git@github.com:username/new_repo\ngit push -u origin master\n```\n\n# Or use a GUI for simpler interactions ü§ì {.scrollable}\n\n- GitHub Desktop: from Github directly\n- Gitkraken: the most comprehensive (requires GitHub Pro)\n\n<center>\n<img src=\"www/img/gitkraken.jpeg\" alt=\"drawing\" style=left width='550' height='550'>\n</center>\n\n> They also handle the SSH keys for you\n\n<img src=\"www/img/gitkrakenGUI.png\" alt=\"drawing\" style=left width='1050' height='1050'>\n\n<center>\n    <font size=\"5\">Thank you for your attention! </font>   \n</center>\n<br />\n\n<center>\n    <font size=\"5\">Questions ‚ùì </font>  \n</center>   \n<br />\n\n\n<center>\n<img src=\"www/img/perfectworld.jpg\" alt=\"drawing\" style=left width='800' height='800'>\n</center>\n\n",
    "supporting": [
      "git_presentation_files"
    ],
    "filters": [],
    "includes": {}
  }
}