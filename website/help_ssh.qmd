---
title: Connecting to the CRNL server over SSH in Visual Code
author: Romain Ligneul
toc: true
execute: 
  echo: true
  freeze: true
---

:::{.callout-note}
The steps in this tutorial are not strictly mandatory. They are mainly meant to avoid entering your password to log into the cluster.
In the long run they will help you to save a lot of time, if you use VS code, Filezilla or any other SSH based connection.
:::


Find your **local** .ssh folder (local always refer to the computer you are using).

On Linux, you can probably find it at `~/.ssh/` or `/home/username/.ssh/`.

On Window, you can probably find at at `C:\Users\username\.ssh\`.

:::{.callout-warning}
For some reason, the automated ssh pipeline might to pose problems on MacOS. Comment at the bottom of this page if you have this problem too, or if you found a solution.
:::

If you don't find it, just create it and `cd` in it. Then type:

`ssh-keygen -f crnlcluster`

::: callout-note
If ssh-keygen is not found, you may need to install [Putty](https://www.putty.org/), restart your terminal and perform these steps again.
:::

Follow the instructions. If you want to use a passphrase, keep it short. Otherwise press Enter to skip entering a passphrase. Then type: `type crnlcluster.pub`

You public key will appear in the terminal. Keep it open.

Now, type:

`ssh cluster_username@10.69.168.93`

**Change** cluster_username to match your username on the cluster (typically, firstname.lastname)

You will be asked to enter your CRNL password (the same you use to enter in the wiki.crnl.fr and to open Jupyter lab sessions).

Now, you are logged in the cluster!

The next step is to make your public SSH key file know from the cluster. To do so, you can either use the cluster command line (a bit tricky), use Filezilla or VS code.

### Manual command line method:

Type:

`cd ~/.ssh/`

`touch authorized_keys`

`vi authorized_keys`

This last command will open a blank file, unless you already registered some SSH keys in the past. In any case, make sure your pointer is at the end of the document and copy paste what had appeared in your local terminal (after `type crnlcluster.pub`). To paste, you only need to make a right-click. To save and close the authorized_keys file, just type `:wq` in it.

Close the terminal.

### Filezilla method

1. Install Filezilla as instructed [here](./help_filezilla).
2. Create an authorized_keys file (without any extension!) somewhere on your local computer and copy-paste the content of your `crnlcluster.pub` file into it.
3. Use Filezilla to transfer the authorized_keys file to your `/home/cluster_username/.ssh/` folder.

### VS code method

Check the comment by @ICUandNS below :).

<hr>

Note that if you are a MacOS user, you might have to change the permissions of the authorized_keys file using chmod ([file permissions / chmod page](./help_filepermissions))
Now, the cluster knows your ssh key and you won't need to use the password anymore (only the ssh key passphrase if you entered one). But let's make an extra-step to further automatize the process.

In your local .ssh folder, create a file named `config` and add the following lines to it:

```         
Host CRNLcluster
  HostName 10.69.168.93
  User cluster_username
  ForwardX11 yes
  ForwardX11Trusted yes
  IdentityFile "path/to/your/sshkey/crnlcluster"
```

Adjust cluster_username and do not add the .pub extension to your IdentityFile/sshkey.

Now, each time you want to reach the command line of the cluster, open a terminal and type:

`ssh cluster_username@CRNLcluster`

You are already into the cluster! 

{{< include _comment_box.qmd >}}