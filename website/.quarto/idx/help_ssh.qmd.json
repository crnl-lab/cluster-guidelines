{"title":"Connecting to the CRNL server over SSH in Visual Code","markdown":{"yaml":{"title":"Connecting to the CRNL server over SSH in Visual Code","author":"Romain Ligneul","toc":true,"execute":{"echo":true,"freeze":true}},"headingText":"Set up the VPN of INSERM (if you are outside the CRNL premises)","containsRefs":false,"markdown":"\n\nVisual Code has a great [Remote\nSSH](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh)\nextension that can be used to connect remotely to the CRNL server,\nwithout having to constantly enter your password. Except for using\nMatlab (it may change soon), working on the server from VScode has only\nadvantages, starting with **speed** (as compared to laggy VNC\nconnections). Since the connection process can be a bit tedious, here\nare the steps to follow. You have only to follow them once. It is\nassumed that you use Windows, but it should be similar on other\nplatforms.\n\n\nTo access the CRNL servers from outside, following this tutorial.\n\n<https://wiki.crnl.fr/doku.php?id=wiki:informatique:services:vpn>\n\nYou need your CRNL identifiers to access this page. Essentially, besides\ninstalling the software, **you have to fill the PDF \"fiche\"**\n([here](https://wiki.crnl.fr/doku.php?id=wiki:informatique:services:vpn))\nand send it to [pe.aguera\\@inserm.fr](pe.aguera@inserm.fr). Then, it\nwill be a matter of days before you can access the CRNL infrastructure\nremotely. You'll be noticed by email.\n\nIf you don't have an INSERM email, you can ask one if you work at CRNL\n(even if you are affiliated to CNRS or UCBL).\n\n## Connect with username and password\n\nIn Visual Code, first click on the bottom left icon of the Remote SSH\nextension.\n\n![](images/paste-1.png)\n\n-   Type, connect to host and enter: `ssh yourusername@10.69.168.62`\n\n-   Then, you'll be asked to enter your password.\n\n-   Open your */home/yourusername* folder (it will ask your password a\n    2nd time)\n\n-   Create a .ssh folder (*/home/yourusername/.ssh*) and inside that\n    folder, create a file named *authorized_keys* (without any\n    extension)\n\n-   Open this file\n\nLeave open this Visual Code session that we will call the *server\nsession*, to open and create the pair of keys.\n\n## Create a pair of keys and configure them\n\n1.  Open VS code a second time on your local computer. We will call this\n    one the *local session*\n2.  Open a terminal in this local session.\n3.  `cd` to the folder of your choice (that's where the SSH keys will be\n    stored, so there should be **no space** in the path)\n4.  Type `ssh-keygen -t ed25519` and chose whatever name you like for\n    the key. You don't have to set a password. If ssh-keygen is throwing\n    an error, see\n    [here](https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=gui#install-openssh-for-windows).\n5.  Two files are created, open the file ending with a .pub extension\n    using VS code or any text editor.\n6.  Copy its content and paste it in the *authorized_keys* file that\n    should be opened in your VS code *server session* (the one we used\n    first)\n7.  Now, return to your *local session* and click again on the blue icon\n    of the Remote SSH extension (bottom left).\n8.  Click *Connect to host*\n9.  Click *Configure SSH Hosts*\n10. Click on the line displaying C:\\\\Users\\\\UserName\\\\.ssh\\\\config and\n    make sure it looks as follow:\n\n```         \nHost 10.69.168.62\n  HostName 10.69.168.62\n  ForwardX11 yes\n  User firstname.lastname\n  IdentityFile C:\\pathofyourkeyfile\\yourkeyfile\n```\n\nOf course, change the User and IdentityFile fields for your own username\nand path to the key (do not include the .pub extension)\n\nThat's it. In principle, the next time you click on *Connect to host* in\nVisual Code, you won't have to enter any password.","srcMarkdownNoYaml":"\n\nVisual Code has a great [Remote\nSSH](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh)\nextension that can be used to connect remotely to the CRNL server,\nwithout having to constantly enter your password. Except for using\nMatlab (it may change soon), working on the server from VScode has only\nadvantages, starting with **speed** (as compared to laggy VNC\nconnections). Since the connection process can be a bit tedious, here\nare the steps to follow. You have only to follow them once. It is\nassumed that you use Windows, but it should be similar on other\nplatforms.\n\n## Set up the VPN of INSERM (if you are outside the CRNL premises)\n\nTo access the CRNL servers from outside, following this tutorial.\n\n<https://wiki.crnl.fr/doku.php?id=wiki:informatique:services:vpn>\n\nYou need your CRNL identifiers to access this page. Essentially, besides\ninstalling the software, **you have to fill the PDF \"fiche\"**\n([here](https://wiki.crnl.fr/doku.php?id=wiki:informatique:services:vpn))\nand send it to [pe.aguera\\@inserm.fr](pe.aguera@inserm.fr). Then, it\nwill be a matter of days before you can access the CRNL infrastructure\nremotely. You'll be noticed by email.\n\nIf you don't have an INSERM email, you can ask one if you work at CRNL\n(even if you are affiliated to CNRS or UCBL).\n\n## Connect with username and password\n\nIn Visual Code, first click on the bottom left icon of the Remote SSH\nextension.\n\n![](images/paste-1.png)\n\n-   Type, connect to host and enter: `ssh yourusername@10.69.168.62`\n\n-   Then, you'll be asked to enter your password.\n\n-   Open your */home/yourusername* folder (it will ask your password a\n    2nd time)\n\n-   Create a .ssh folder (*/home/yourusername/.ssh*) and inside that\n    folder, create a file named *authorized_keys* (without any\n    extension)\n\n-   Open this file\n\nLeave open this Visual Code session that we will call the *server\nsession*, to open and create the pair of keys.\n\n## Create a pair of keys and configure them\n\n1.  Open VS code a second time on your local computer. We will call this\n    one the *local session*\n2.  Open a terminal in this local session.\n3.  `cd` to the folder of your choice (that's where the SSH keys will be\n    stored, so there should be **no space** in the path)\n4.  Type `ssh-keygen -t ed25519` and chose whatever name you like for\n    the key. You don't have to set a password. If ssh-keygen is throwing\n    an error, see\n    [here](https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=gui#install-openssh-for-windows).\n5.  Two files are created, open the file ending with a .pub extension\n    using VS code or any text editor.\n6.  Copy its content and paste it in the *authorized_keys* file that\n    should be opened in your VS code *server session* (the one we used\n    first)\n7.  Now, return to your *local session* and click again on the blue icon\n    of the Remote SSH extension (bottom left).\n8.  Click *Connect to host*\n9.  Click *Configure SSH Hosts*\n10. Click on the line displaying C:\\\\Users\\\\UserName\\\\.ssh\\\\config and\n    make sure it looks as follow:\n\n```         \nHost 10.69.168.62\n  HostName 10.69.168.62\n  ForwardX11 yes\n  User firstname.lastname\n  IdentityFile C:\\pathofyourkeyfile\\yourkeyfile\n```\n\nOf course, change the User and IdentityFile fields for your own username\nand path to the key (do not include the .pub extension)\n\nThat's it. In principle, the next time you click on *Connect to host* in\nVisual Code, you won't have to enter any password."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"0":"!./www/*","keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"help_ssh.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.1","theme":["cerulean","custom.scss"],"title":"Connecting to the CRNL server over SSH in Visual Code","author":"Romain Ligneul"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}